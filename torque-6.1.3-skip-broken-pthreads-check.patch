diff -up torque-6.1.3.h5/configure.ac.1~ torque-6.1.3.h5/configure.ac
--- torque-6.1.3.h5/configure.ac.1~	2022-01-12 02:29:36.531807520 +0100
+++ torque-6.1.3.h5/configure.ac	2022-01-12 02:33:54.045837301 +0100
@@ -82,7 +82,7 @@ gccwarnings=yes
 dnl  Instead of putting a long list of defines on the command line
 dnl  for each compile, use a file called "pbs_config.h" that will
 dnl  be created in the include directory.
-AM_CONFIG_HEADER([src/include/pbs_config.h])
+AC_CONFIG_HEADERS([src/include/pbs_config.h])
 
 dnl
 dnl Find our git revision hash for program outputs
@@ -785,28 +785,21 @@ dnl Torque's own largefile support
 TAC_SYS_LARGEFILE
 
 
-dnl We need pthreads
-AC_CHECK_LIB(pthread, pthread_create,
-    PTHREAD_LIBS="$PTHREAD_LIBS -lpthread -lrt",
-    [AC_MSG_ERROR([TORQUE needs pthreads in order to build]) ])
-LIBS="$LIBS $PTHREAD_LIBS"
-
-
 dnl
 dnl we need libxml2
 dnl
 xmlLib=`xml2-config --libs | sed 's/-L@<:@^@<:@:space:@:>@@:>@* //g;s/-l//'`
 
 dnl skip the first two chars because its -l<libname>
-AC_CHECK_LIB(${xmlLib}, xmlGetProp,
-  [],
-  [AC_MSG_ERROR([TORQUE needs libxml2-devel in order to build]) ])
+#AC_CHECK_LIB(${xmlLib}, xmlGetProp,
+#  [],
+#  [AC_MSG_ERROR([TORQUE needs libxml2-devel in order to build]) ])
 
 
 dnl find zlib
-AC_CHECK_LIB(z, gzopen,
-  [],
-  [AC_MSG_ERROR([TORQUE needs zlib-devel in order to build]) ])
+#AC_CHECK_LIB(z, gzopen,
+#  [],
+#  [AC_MSG_ERROR([TORQUE needs zlib-devel in order to build]) ])
 
 
 dnl ###########################################
@@ -1186,7 +1179,7 @@ AC_ARG_WITH(hwloc-path, [
                        Example: ./configure --with-hwloc-path=/usr/local/hwloc-1.9
                        Will specify that the include files are in /usr/local/hwloc-1.9/include and
                        the libraries are in /usr/local/hwloc-1.9/lib],
-  [HWLOC_LIBS="-L${withval}/lib -lhwloc"; HWLOC_CFLAGS="-I${withval}/include"],
+  [HWLOC_LIBS="-lhwloc"; HWLOC_CFLAGS="-I${withval}/include"],
   [TOM="BOB"])
 
 
@@ -2515,10 +2508,10 @@ AC_CHECK_FUNCS([gettimeofday rresvport b
 AC_FUNC_GETGROUPS
 
 dnl see if atexit() exists, if not check for on_exit(), if that fails, panic
-AC_CHECK_FUNCS(atexit on_exit, [ { found_an_exit=yes; break; } ])
-if test "$found_an_exit" != yes; then
-    AC_MSG_ERROR([Must have atexit() or on_exit()])
-fi
+#AC_CHECK_FUNCS(atexit on_exit, [ { found_an_exit=yes; break; } ])
+#if test "$found_an_exit" != yes; then
+#    AC_MSG_ERROR([Must have atexit() or on_exit()])
+#fi
 
 AC_CHECK_FUNC(ntohl, [ :],
   AC_MSG_CHECKING([for ntohl in arpa/inet.h])
